{"version":3,"sources":["./src/app/pages/sellers/sellers-routing.module.ts","./src/app/core/resolvers/seller.resolver.ts","./src/app/pages/sellers/editseller/editseller.component.ts","./src/app/pages/sellers/editseller/editseller.component.html","./src/app/pages/sellers/addseller/addseller.component.ts","./src/app/pages/sellers/addseller/addseller.component.html","./src/app/pages/sellers/sellers.module.ts","./src/app/pages/sellers/sellerslist/sellerslist.component.ts","./src/app/pages/sellers/sellerslist/sellerslist.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEc;AACM;AACH;AAEF;;;AAGtE,MAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE;IAEhC;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,iFAAkB;KAChC;IACD;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,uFAAoB;KAClC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,oFAAmB;QAC9B,OAAO,EAAE,EAAC,IAAI,EAAE,8EAAc,EAAC;KAElC;CACJ,CAAC;AAMK,MAAM,oBAAoB;;mGAApB,oBAAoB;kKAApB,oBAAoB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEb,oBAAoB,uFAFnB,4DAAY;6FAEb,oBAAoB;cAJhC,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAA2C;;;AAUpC,MAAM,cAAc;IAEzB,YAAoB,EAAoB;QAApB,OAAE,GAAF,EAAE,CAAkB;IAAI,CAAC;IAE7C,OAAO,CAAC,KAA6B,EAAE,KAA0B;QAC/D,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;;4EAPU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,KAAK;6FAEN,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,KAAK;aAClB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAMD;;;;;;;;;;;ICiB7C,uEAA2C;IAAA,4EAAiB;IAAA,4DAAO;;;IADrE,0EACE;IAAA,yHAAmE;IACrE,4DAAM;;;IADG,0DAAkC;IAAlC,qGAAkC;;;IASzC,uEAAyC;IAAA,6EAAkB;IAAA,4DAAO;;;IADpE,0EACE;IAAA,yHAAkE;IACpE,4DAAM;;;IADG,0DAAgC;IAAhC,mGAAgC;;;IASvC,uEAA8C;IAAA,+EAAoB;IAAA,4DAAO;;;IAD3E,0EACE;IAAA,yHAAyE;IAC3E,4DAAM;;;IADG,0DAAqC;IAArC,wGAAqC;;;IAS5C,uEAAyC;IAAA,6EAAkB;IAAA,4DAAO;;;IADpE,0EACE;IAAA,yHAAkE;IACpE,4DAAM;;;IADG,0DAAgC;IAAhC,mGAAgC;;;IAUvC,uEAA6C;IAAA,qGAA0C;IAAA,4DAAO;;;IADhG,0EACE;IAAA,yHAA8F;IAChG,4DAAM;;;IADG,0DAAoC;IAApC,uGAAoC;;;;IAIzC,0EACE;IAAA,0EACE;IAAA,wEAAoD;IAAjD,uWAA2B;IAAsB,mEAAiD;IACrG,4DAAI;IACJ,qEACA;IAEF,4DAAM;IACR,4DAAM;;;;IAJG,0DAA2C;IAA3C,qLAA2C;;;IANxD,0EACE;IAAA,yEACE;IAAA,uHAQM;IACR,4DAAM;IACR,4DAAM;;;IAVoB,0DAAQ;IAAR,iFAAQ;;;IAqB5B,uEAA2C;IAAA,+HAAuB;IAAA,4DAAO;;;IAD3E,0EACE;IAAA,yHAAyE;IAC3E,4DAAM;;;IADG,0DAAkC;IAAlC,qGAAkC;;;IAWjC,uEAAwC;IAAA,4EAAiB;IAAA,4DAAO;;;IADlE,0EACE;IAAA,yHAAgE;IAClE,4DAAM;;;IADG,0DAA+B;IAA/B,kGAA+B;;;IAStC,uEAA0C;IAAA,8EAAmB;IAAA,4DAAO;;;IADtE,0EACE;IAAA,yHAAoE;IACtE,4DAAM;;;IADG,0DAAiC;IAAjC,oGAAiC;;;IAWxC,uEAAuC;IAAA,2EAAgB;IAAA,4DAAO;;;IADhE,0EACE;IAAA,yHAA8D;IAChE,4DAAM;;;IADG,0DAA8B;IAA9B,iGAA8B;;;IAW7C,uEAA8C;IAAA,+EAAoB;IAAA,4DAAO;;;IAD3E,0EACE;IAAA,yHAAyE;IAC3E,4DAAM;;;IADG,0DAAqC;IAArC,yGAAqC;;;IAQhD,uEAAkD;IAAA,8EAAmB;IAAA,4DAAO;;;IAD9E,0EACE;IAAA,yHAA4E;IAC9E,4DAAM;;;IADG,0DAAyC;IAAzC,6GAAyC;;;IAOhD,uEAAkD;IAAA,mHAAqB;IAAA,4DAAO;;;IADhF,0EACE;IAAA,yHAA8E;IAChF,4DAAM;;;IADG,0DAAyC;IAAzC,6GAAyC;;;;ADhI/D,MAAM,mBAAmB;IAe9B,YAAoB,KAAqB,EAAU,MAAc,EAAS,WAAwB,EAAU,IAAgB,EAAU,OAAyB;QAA3I,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,YAAO,GAAP,OAAO,CAAkB;QAd/J,YAAO,GAAG,qEAAW,CAAC,OAAO,CAAC;QAK9B,iBAAiB;QACjB,WAAM,GAAY,KAAK,CAAC;QAGxB,UAAK,GAAG,EAAE,CAAC;QACX,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAa,EAAE,CAAC;QAInB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,eAAe,EAAE,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QACnD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;IAE5C,CAAC;IACD;;OAEG;IACH,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAErF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAElD,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5D,OAAO,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC5D,KAAK,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,KAAK,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,UAAU,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,UAAU,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClE,cAAc,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1E,cAAc,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1E,IAAI,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtD,MAAM,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1D,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,SAAS,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACjE,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,QAAQ,CAAC,IAAS;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD;;OAEG;IACH,eAAe,CAAC,KAAK;QACnB,wHAAwH;QACxH,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;QAExE,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEvC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAEtB,CAAC;IACD,WAAW,CAAC,EAAE;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,2CAA2C;YACxE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1D;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,OAAO;SACR;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE9B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAGrB;QACD,mCAAmC;QACnC,+DAA+D;QAC/D,uFAAuF;QACvF,yFAAyF;QACzF,iEAAiE;QACjE,mDAAmD;QACnD,EAAE;QACF,sEAAsE;QACtE,2BAA2B;QAC3B,kCAAkC;QAClC,mBAAmB;QACnB,QAAQ;IACV,CAAC;;sFAvGU,mBAAmB;mGAAnB,mBAAmB;QCfhC,yEAEI;QACA,+EAAyF;QAGzF,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEAEE;QAAA,wEAAuB;QAAA,4EAAiB;QAAA,4DAAK;QAC7C,uEAA2B;QAAA,+EAAoB;QAAA,4DAAI;QAEnD,2EACE;QADkE,gJAAY,iBAAa,IAAC;QAC5F,uEAEA;QAAA,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,6EAAsB;QAAA,uEAAW;QAAA,4DAAQ;QACzC,wEAEA;QAAA,kHAEM;QACR,4DAAM;QAEN,2EACE;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,wEAEA;QAAA,kHAEM;QACR,4DAAM;QAER,2EACI;QAAA,6EAAwB;QAAA,mEAAO;QAAA,4DAAQ;QACvC,wEAEA;QAAA,kHAEM;QACR,4DAAM;QAEN,2EACE;QAAA,6EAAmB;QAAA,qEAAS;QAAA,4DAAQ;QACpC,wEAEA;QAAA,kHAEM;QACR,4DAAM;QAGN,2EACE;QAAA,6EAAyC;QAAA,sEAAS;QAAA,4DAAQ;QAC1D,gFAA6I;QAAtD,wJAAW,2BAAuB,IAAC;QAAmB,4DAAW;QACxJ,wEACA;QAAA,kHAEM;QACN,kHAYM;QACR,4DAAM;QAER,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,6EAAqB;QAAA,mHAAU;QAAA,4DAAQ;QACvC,wEAEA;QAAA,kHAEM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACI;QAAA,2EACI;QAAA,6EAA+B;QAAA,gEAAI;QAAA,4DAAQ;QAC3C,wEAEA;QAAA,kHAEM;QACV,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,2EACI;QAAA,6EAAgC;QAAA,kEAAM;QAAA,4DAAQ;QAC9C,4EAAuM;QACvM,kHAEM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,2EACI;QAAA,6EAA8B;QAAA,+DAAG;QAAA,4DAAQ;QACzC,wEAEA;QAAA,kHAEM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EACI;QAAA,6EAAwB;QAAA,sGAAO;QAAA,4DAAQ;QACvC,wEAEA;QAAA,kHAEM;QACR,4DAAM;QAEV,2EACE;QAAA,6EAAyB;QAAA,iEAAK;QAAA,4DAAQ;QACtC,2EAAyK;QACzK,kHAEM;QACR,4DAAM;QACN,2EACE;QAAA,6EAAyB;QAAA,sGAAO;QAAA,4DAAQ;QACxC,2EAA0K;QAC1K,kHAEM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,wEACA;QAAA,8EAAgD;QAAA,kEAAM;QAAA,4DAAS;QACjE,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGR,4DAAM;;QA5JgC,0DAAmC;QAAnC,gGAAmC;QAWzD,0DAAyB;QAAzB,sFAAyB;QAQrB,0DAAyD;QAAzD,kLAAyD;QACrD,0DAAmC;QAAnC,uGAAmC;QAQvC,0DAAuD;QAAvD,gLAAuD;QACnD,0DAAiC;QAAjC,qGAAiC;QAQrC,0DAA4D;QAA5D,qLAA4D;QACxD,0DAAsC;QAAtC,0GAAsC;QAQ1C,0DAAuD;QAAvD,gLAAuD;QACnD,0DAAiC;QAAjC,qGAAiC;QAQZ,0DAA2D;QAA3D,oLAA2D;QAEhF,0DAAqC;QAArC,yGAAqC;QAGrC,0DAAoB;QAApB,sFAAoB;QAqBpB,0DAAyD;QAAzD,kLAAyD;QACrD,0DAAmC;QAAnC,uGAAmC;QAUjC,0DAAsD;QAAtD,+KAAsD;QAChD,0DAAgC;QAAhC,oGAAgC;QAQF,0DAAwD;QAAxD,iLAAwD;QACtF,0DAAkC;QAAlC,sGAAkC;QAUxC,0DAAqD;QAArD,8KAAqD;QAC/C,0DAA+B;QAA/B,mGAA+B;QAU3C,0DAA4D;QAA5D,qLAA4D;QACxD,0DAAsC;QAAtC,0GAAsC;QAOjB,0DAAgE;QAAhE,yLAAgE;QACzF,0DAA0C;QAA1C,8GAA0C;QAMhB,0DAAgE;QAAhE,yLAAgE;QAC1F,0DAA0C;QAA1C,8GAA0C;QAOsC,0DAAmB;QAAnB,gFAAmB;;6FDtIhH,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;AAMD;;;;;;;;;;;ICc/C,uEAA2C;IAAA,4EAAiB;IAAA,4DAAO;;;IADrE,0EACE;IAAA,wHAAmE;IACrE,4DAAM;;;IADG,0DAAkC;IAAlC,qGAAkC;;;IAQzC,uEAAyC;IAAA,6EAAkB;IAAA,4DAAO;;;IADpE,0EACE;IAAA,wHAAkE;IACpE,4DAAM;;;IADG,0DAAgC;IAAhC,mGAAgC;;;IAQvC,uEAA8C;IAAA,+EAAoB;IAAA,4DAAO;;;IAD3E,0EACE;IAAA,wHAAyE;IAC3E,4DAAM;;;IADG,0DAAqC;IAArC,wGAAqC;;;IAQ5C,uEAAyC;IAAA,6EAAkB;IAAA,4DAAO;;;IADpE,0EACE;IAAA,wHAAkE;IACpE,4DAAM;;;IADG,0DAAgC;IAAhC,mGAAgC;;;IAUvC,uEAA6C;IAAA,qGAA0C;IAAA,4DAAO;;;IADhG,0EACE;IAAA,wHAA8F;IAChG,4DAAM;;;IADG,0DAAoC;IAApC,uGAAoC;;;;IAIzC,0EACE;IAAA,0EACE;IAAA,wEAAoD;IAAjD,sWAA2B;IAAsB,mEAAiD;IACrG,4DAAI;IACJ,qEACA;IAEF,4DAAM;IACR,4DAAM;;;;IAJG,0DAA2C;IAA3C,qLAA2C;;;IANxD,0EACE;IAAA,yEACE;IAAA,sHAQM;IACR,4DAAM;IACR,4DAAM;;;IAVoB,0DAAQ;IAAR,iFAAQ;;;IAoBhC,uEAA2C;IAAA,+HAAuB;IAAA,4DAAO;;;IAD3E,0EACE;IAAA,wHAAyE;IAC3E,4DAAM;;;IADG,0DAAkC;IAAlC,qGAAkC;;;IAUrC,uEAAwC;IAAA,4EAAiB;IAAA,4DAAO;;;IADlE,0EACE;IAAA,wHAAgE;IAClE,4DAAM;;;IADG,0DAA+B;IAA/B,kGAA+B;;;IAStC,uEAA0C;IAAA,8EAAmB;IAAA,4DAAO;;;IADtE,0EACE;IAAA,wHAAoE;IACtE,4DAAM;;;IADG,0DAAiC;IAAjC,oGAAiC;;;IAUxC,uEAAuC;IAAA,2EAAgB;IAAA,4DAAO;;;IADhE,0EACE;IAAA,wHAA8D;IAChE,4DAAM;;;IADG,0DAA8B;IAA9B,iGAA8B;;;IAUzC,uEAA8C;IAAA,+EAAoB;IAAA,4DAAO;;;IAD3E,0EACE;IAAA,wHAAyE;IAC3E,4DAAM;;;IADG,0DAAqC;IAArC,yGAAqC;;;IAQ5C,uEAAkD;IAAA,8EAAmB;IAAA,4DAAO;;;IAD9E,0EACE;IAAA,wHAA4E;IAC9E,4DAAM;;;IADG,0DAAyC;IAAzC,6GAAyC;;;IAOhD,uEAAkD;IAAA,mHAAqB;IAAA,4DAAO;;;IADhF,0EACE;IAAA,wHAA8E;IAChF,4DAAM;;;IADG,0DAAyC;IAAzC,6GAAyC;;;;ADvH7D,MAAM,kBAAkB;IAc7B,YAAoB,MAAc,EAAS,WAAwB,EAAU,IAAgB,EAAU,OAAyB;QAA5G,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,YAAO,GAAP,OAAO,CAAkB;QAbhI,YAAO,GAAG,qEAAW,CAAC,OAAO,CAAC;QAK9B,iBAAiB;QACjB,WAAM,GAAY,KAAK,CAAC;QAGxB,UAAK,GAAG,EAAE,CAAC;QACX,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAa,EAAE,CAAC;QAGnB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,eAAe,EAAE,CAAC;IAE1C,CAAC;IACD;;OAEG;IACH,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAEtF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACvC,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,QAAQ,CAAC,IAAS;QAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IACD;;OAEG;IACH,eAAe,CAAC,KAAK;QACnB,wHAAwH;QACxH,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;QAExE,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACxD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAEvC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IAEtB,CAAC;IACD,WAAW,CAAC,EAAE;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACrC,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,2CAA2C;YACxE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC1D;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAEnB,+BAA+B;QAC/B,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,OAAO;SACR;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE9B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC1G,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SAGrB;QACD,mCAAmC;QACnC,+DAA+D;QAC/D,uFAAuF;QACvF,yFAAyF;QACzF,iEAAiE;QACjE,mDAAmD;QACnD,EAAE;QACF,sEAAsE;QACtE,2BAA2B;QAC3B,kCAAkC;QAClC,mBAAmB;QACnB,QAAQ;IACV,CAAC;;oFAlGU,kBAAkB;kGAAlB,kBAAkB;QCd/B,yEAEE;QACA,+EAAwF;QAGxF,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEAEE;QAAA,wEAAuB;QAAA,4EAAiB;QAAA,4DAAK;QAC7C,uEAA2B;QAAA,+EAAoB;QAAA,4DAAI;QAEnD,2EACE;QADkE,+IAAY,iBAAa,IAAC;QAC5F,0EACE;QAAA,0EACE;QAAA,2EACE;QAAA,6EAAsB;QAAA,uEAAW;QAAA,4DAAQ;QACzC,wEACA;QAAA,iHAEM;QACR,4DAAM;QAEN,2EACE;QAAA,6EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,wEACA;QAAA,iHAEM;QACR,4DAAM;QAEN,2EACE;QAAA,6EAAwB;QAAA,mEAAO;QAAA,4DAAQ;QACvC,wEACA;QAAA,iHAEM;QACR,4DAAM;QAEN,2EACE;QAAA,6EAAmB;QAAA,qEAAS;QAAA,4DAAQ;QACpC,wEACA;QAAA,iHAEM;QACR,4DAAM;QAGN,2EACE;QAAA,6EAAyC;QAAA,sEAAS;QAAA,4DAAQ;QAC1D,gFAA6I;QAAtD,uJAAW,2BAAuB,IAAC;QAAmB,4DAAW;QACxJ,wEACA;QAAA,iHAEM;QACN,iHAYM;QACR,4DAAM;QAER,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,6EAAqB;QAAA,mHAAU;QAAA,4DAAQ;QACvC,wEACA;QAAA,iHAEM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,6EAA+B;QAAA,gEAAI;QAAA,4DAAQ;QAC3C,wEACA;QAAA,iHAEM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,6EAAgC;QAAA,kEAAM;QAAA,4DAAQ;QAC9C,4EAAuM;QACvM,iHAEM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,6EAA8B;QAAA,+DAAG;QAAA,4DAAQ;QACzC,wEACA;QAAA,iHAEM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,6EAAwB;QAAA,sGAAO;QAAA,4DAAQ;QACvC,wEACA;QAAA,iHAEM;QACR,4DAAM;QAEN,2EACE;QAAA,6EAAyB;QAAA,iEAAK;QAAA,4DAAQ;QACtC,2EAAyK;QACzK,iHAEM;QACR,4DAAM;QACN,2EACE;QAAA,6EAAyB;QAAA,sGAAO;QAAA,4DAAQ;QACxC,2EAAyK;QACzK,iHAEM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,wEACA;QAAA,8EAAgD;QAAA,kEAAM;QAAA,4DAAS;QACjE,4DAAM;QACR,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGR,4DAAM;;QAlJ+B,0DAAmC;QAAnC,gGAAmC;QAWxD,0DAAyB;QAAzB,sFAAyB;QAKuE,0DAAyD;QAAzD,kLAAyD;QACjJ,0DAAmC;QAAnC,uGAAmC;QAO+C,0DAAuD;QAAvD,gLAAuD;QACzI,0DAAiC;QAAjC,qGAAiC;QAOgE,0DAA4D;QAA5D,qLAA4D;QAC7J,0DAAsC;QAAtC,0GAAsC;QAO4C,0DAAuD;QAAvD,gLAAuD;QACzI,0DAAiC;QAAjC,qGAAiC;QAQZ,0DAA2D;QAA3D,oLAA2D;QAEhF,0DAAqC;QAArC,yGAAqC;QAGrC,0DAAoB;QAApB,sFAAoB;QAoBoE,0DAAyD;QAAzD,kLAAyD;QACjJ,0DAAmC;QAAnC,uGAAmC;QASoC,0DAAsD;QAAtD,+KAAsD;QACzH,0DAAgC;QAAhC,oGAAgC;QAQF,0DAAwD;QAAxD,iLAAwD;QACtF,0DAAkC;QAAlC,sGAAkC;QAS+B,0DAAqD;QAArD,8KAAqD;QACtH,0DAA+B;QAA/B,mGAA+B;QAS8D,0DAA4D;QAA5D,qLAA4D;QAC7J,0DAAsC;QAAtC,0GAAsC;QAOb,0DAAgE;QAAhE,yLAAgE;QACzF,0DAA0C;QAA1C,8GAA0C;QAMjB,0DAAgE;QAAhE,yLAAgE;QACzF,0DAA0C;QAA1C,8GAA0C;QAOsC,0DAAmB;QAAnB,gFAAmB;;6FD7H9G,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACmB;AAEF;AACX;AACY;AAEpB;AACW;AAC0C;AAC5C;AACC;AAED;AAEkB;AAEH;AACM;;AAG3E,MAAM,MAAM,GAA4B;AACtC,2CAA2C;CAE5C,CAAC;AA2BK,MAAM,aAAa;;4FAAb,aAAa;oJAAb,aAAa,mBAPb;QACT;YACE,OAAO,EAAE,oEAAe;YACxB,QAAQ,EAAE,MAAM;SACjB;KACF,YApBQ;YACP,4DAAY;YACZ,4EAAoB;YACpB,uEAAY;YACZ,0DAAW;YACX,qEAAmB;YACnB,4EAAiB;YACjB,mEAAc;YACd,kEAAmB;YACnB,6DAAQ;YACR,yEAAY;YACZ,0DAAe;YACf,oEAAc;YACd,8EAAmB;SACpB;mIAQU,aAAa,mBAvBT,kFAAkB,EAAE,wFAAoB,EAAE,qFAAmB,aAE1E,4DAAY;QACZ,4EAAoB;QACpB,uEAAY;QACZ,0DAAW;QACX,qEAAmB;QACnB,4EAAiB;QACjB,mEAAc;QACd,kEAAmB;QACnB,6DAAQ;QACR,yEAAY;QACZ,0DAAe;QACf,oEAAc;QACd,8EAAmB;6FASV,aAAa;cAzBzB,sDAAQ;eAAC;gBACR,4CAA4C;gBAC5C,YAAY,EAAE,CAAC,kFAAkB,EAAE,wFAAoB,EAAE,qFAAmB,CAAC;gBAC7E,OAAO,EAAE;oBACP,4DAAY;oBACZ,4EAAoB;oBACpB,uEAAY;oBACZ,0DAAW;oBACX,qEAAmB;oBACnB,4EAAiB;oBACjB,mEAAc;oBACd,kEAAmB;oBACnB,6DAAQ;oBACR,yEAAY;oBACZ,0DAAe;oBACf,oEAAc;oBACd,8EAAmB;iBACpB;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,oEAAe;wBACxB,QAAQ,EAAE,MAAM;qBACjB;iBACF;aACF;;;;;;;;;;;;;;ACnDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;ICoChC,qEACE;IAAA,qEACE;IAAA,0EACE;IAAA,uEACA;IAAA,4EAA2D;IAAA,iEAAM;IAAA,4DAAQ;IAC3E,4DAAM;IACR,4DAAK;IACL,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,sEACE;IAAA,yEAAgB;IAAA,wDAAmB;IAAA,4DAAI;IACvC,yEAAgB;IAAA,wDAAmB;IAAA,4DAAI;IACzC,4DAAK;IAEL,sEAAI;IAAA,wDAAwB;IAAA,4DAAK;IACjC,sEACI;IAAA,wDACJ;IAAA,4DAAK;IACL,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAC9B,sEAAI;IAAA,wDAA6C;;IAAA,4DAAK;IACtD,sEACE;IAAA,2EACE;IAAA,yEAEE;IAAA,oEAAoD;IACtD,4DAAI;IACJ,0EACE;IAAA,sEAAI;IAAA,yEAA0D;IAAvD,sWAAgC;IAAuB,oEACR;IAClD,iEAAI;IAAA,4DAAI;IAAA,4DAAK;IACjB,sEAAI;IAAA,yEAAiE;IAA9D,6WAAuC;IAAuB,oEACjB;IAChD,mEAAM;IAAA,4DAAI;IAAA,4DAAK;IACrB,4DAAK;IACP,4DAAM;IACR,4DAAK;IACP,4DAAK;;;;IAjCQ,0DAAqB;IAArB,mGAAqB;IACQ,0DAAsB;IAAtB,oGAAsB;IAG1D,0DAAqB;IAArB,qFAAqB;IACrB,0DAAqB;IAArB,qFAAqB;IAEP,0DAAmB;IAAnB,mFAAmB;IACnB,0DAAmB;IAAnB,mFAAmB;IAGjC,0DAAwB;IAAxB,wFAAwB;IAExB,0DACJ;IADI,8FACJ;IACI,0DAAqB;IAArB,qFAAqB;IACrB,0DAA6C;IAA7C,wKAA6C;;AD1C9D,MAAM,oBAAoB;IAYhC,YAAoB,MAAc,EAAU,gBAAkC;QAA1D,WAAM,GAAN,MAAM,CAAQ;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAEnF,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAAK,IAAI,CAAC,aAAa,GAAG,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAClG,CAAC,CAAC,CAAC;QACJ,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QAErB;;WAEG;QACH,qBAAqB;IACvB,CAAC;IACD,eAAe,CAAC,EAAE;QAChB,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;YAEtE,gDAAgD;YAChD,iBAAiB;YACjB,wBAAwB;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,QAAQ,CAAC,EAAE;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,GAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,CAAC;;wFApCW,oBAAoB;oGAApB,oBAAoB;QCbjC,yEAEI;QAAA,+EAAqF;QAErF,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,6EACA;QADgE,uLAAkB;QAAlF,4DACA;QAAA,oEAA4C;QAC9C,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGR,4DAAM;QACN,2EACE;QAAA,6EACE;QAAA,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,6DAAC;QAAA,4DAAK;QACV,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,sEAAI;QAAA,mHAAU;QAAA,4DAAK;QACnB,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACjB,4DAAK;QACP,4DAAQ;QACR,yEACE;QAAA,mHAoCK;;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QAKR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;;QAnF4B,0DAAmC;QAAnC,gGAAmC;QAUa,0DAAkB;QAAlB,6EAAkB;QAwB1D,2DAAiC;QAAjC,kKAAiC;;6FDvBhE,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C","file":"sellers-sellers-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddsellerComponent } from './addseller/addseller.component';\nimport { SellerslistComponent } from './sellerslist/sellerslist.component';\nimport { EditsellerComponent } from './editseller/editseller.component';\n\nimport { SellerResolver } from '../../core/resolvers/seller.resolver';\n\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'list' },\n\n    {\n        path: 'add',\n        component: AddsellerComponent,\n    },\n    {\n        path: 'list',\n        component: SellerslistComponent,\n    },\n    {\n        path: 'edit/:id',\n        component: EditsellerComponent,\n        resolve: {shop: SellerResolver}\n\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SellersRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { take, map } from 'rxjs/operators';\nimport { Seller } from '../models/seller.models';\n\nimport { MarketingService } from '../services/marketing.service';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'any'\n})\nexport class SellerResolver implements Resolve <Observable<Seller>>{\n\n  constructor(private ds: MarketingService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    let id = route.paramMap.get('id');\n    return this.ds.getSeller(id);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\nimport { MarketingService } from '../../../core/services/marketing.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '../../../../environments/environment';\nimport { Seller } from '../../../core/models/seller.models';\n\n@Component({\n  selector: 'app-editseller',\n  templateUrl: './editseller.component.html',\n  styleUrls: ['./editseller.component.scss']\n})\nexport class EditsellerComponent implements OnInit {\n  backend = environment.backend;\n\n  productForm: FormGroup;\n  // bread crumb items\n  breadCrumbItems: Array<{}>;\n  // Form submition\n  submit: boolean = false;\n\n  config: DropzoneConfigInterface;\n  image = '';\n  file = '';\n  files: number[] = [];\n  customersData: Seller;\n\n  constructor(private route: ActivatedRoute, private router: Router, public formBuilder: FormBuilder, private http: HttpClient, private setserv: MarketingService) {\n    this.config = setserv.getUploadConfig();\n    this.customersData = this.route.snapshot.data.shop;\n    this.files = this.customersData.documents;\n\n  }\n  /**\n   * Returns form\n   */\n  get form() {\n    return this.productForm.controls;\n  }\n\n  ngOnInit() {\n    this.breadCrumbItems = [{ label: 'Sellers' }, { label: 'Add Seller', active: true }];\n\n    this.productForm = this.formBuilder.group({\n      id: [this.customersData.id, [Validators.required]],\n\n      name_en: [this.customersData.name_en, [Validators.required]],\n      name_ar: [this.customersData.name_ar, [Validators.required]],\n      email: [this.customersData.email, [Validators.required]],\n      phone: [this.customersData.phone, [Validators.required]],\n      address_en: [this.customersData.address_en, [Validators.required]],\n      address_ar: [this.customersData.address_ar, [Validators.required]],\n      description_ar: [this.customersData.description_ar, [Validators.required]],\n      description_en: [this.customersData.description_en, [Validators.required]],\n      city: [this.customersData.city, [Validators.required]],\n      region: [this.customersData.region, [Validators.required]],\n      zip: [this.customersData.zip, [Validators.required]],\n      documents: [this.customersData.documents, [Validators.required]],\n    });\n    this.submit = false;\n  }\n\n  onAccept(file: any) {\n    this.image = file.name;\n    this.file = file;\n  }\n  /**\n   * Bootsrap validation form submit method\n   */\n  onUploadSuccess(event) {\n    // event[2].srcElement.then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    event[0].previewElement.parentNode.removeChild(event[0].previewElement);\n\n    let response = JSON.parse(event[2].srcElement.response);\n    this.files.push(response.id);\n    console.log(this.productForm.controls);\n\n    this.productForm.controls.documents.setValue(this.files);\n    this.submit = false;\n\n  }\n  deleteImage(id) {\n    const index = this.files.indexOf(id);\n    if (index > -1) {\n      this.files.splice(index, 1); // 2nd parameter means remove one item only\n      this.productForm.controls.documents.setValue(this.files);\n    }\n  }\n\n  validSubmit() {\n    this.submit = true;\n\n    // stop here if form is invalid\n    if (this.productForm.invalid) {\n      return;\n    } else {\n      console.log(this.productForm);\n\n      this.setserv.addSeller(this.productForm.value).subscribe(data => this.router.navigate(['/sellers/list']));\n      this.submit = false;\n\n\n    }\n    // const formData = new FormData();\n    // formData.append('name', this.productForm.get('name').value);\n    // formData.append('manufacture_name', this.productForm.get('manufacture_name').value);\n    // formData.append('manufacture_brand', this.productForm.get('manufacture_brand').value);\n    // formData.append('price', this.productForm.get('price').value);\n    // formData.append('image', this.file, this.image);\n    //\n    // this.http.post<any>(`http://localhost:8000/api/products`, formData)\n    //   .subscribe((data) => {\n    //     // console.log('da', data);\n    //     return data;\n    //   });\n  }\n}\n","<div class=\"container-fluid\">\n\n    <!-- start page title -->\n    <app-page-title title=\"Edit Seller\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\n    <!-- end page title -->\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n\n            <h4 class=\"card-title\">Basic Information</h4>\n            <p class=\"card-title-desc\">Fill all information</p>\n\n            <form [formGroup]=\"productForm\" id=\"productForm\" name=\"productForm\" (ngSubmit)=\"validSubmit()\">\n              <input type=\"hidden\" name=\"id\" formControlName=\"id\">\n\n              <div class=\"row\">\n                <div class=\"col-sm-6\">\n                  <div class=\"form-group\">\n                    <label for=\"shopname\">Seller Name</label>\n                    <input id=\"name_en\" name=\"name_en\" type=\"text\" class=\"form-control\" formControlName=\"name_en\"\n                      [ngClass]=\"{'is-invalid': submit && form.name_en.errors}\">\n                    <div *ngIf=\"submit && form.name_en.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"form.name_en.errors.required\">Name is required.</span>\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input id=\"email\" name=\"email\" type=\"text\" class=\"form-control\" formControlName=\"email\"\n                      [ngClass]=\"{'is-invalid': submit && form.email.errors}\">\n                    <div *ngIf=\"submit && form.email.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"form.email.errors.required\">Email is required.</span>\n                    </div>\n                  </div>\n\n                <div class=\"form-group\">\n                    <label for=\"address_en\">Address</label>\n                    <input id=\"address_en\" name=\"address_en\" type=\"text\" class=\"form-control\" formControlName=\"address_en\"\n                      [ngClass]=\"{'is-invalid': submit && form.address_en.errors}\">\n                    <div *ngIf=\"submit && form.address_en.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"form.address_en.errors.required\">Address is required.</span>\n                    </div>\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label for=\"phone\">Phone No.</label>\n                    <input id=\"phone\" name=\"phone\" type=\"text\" class=\"form-control\" formControlName=\"phone\"\n                      [ngClass]=\"{'is-invalid': submit && form.phone.errors}\">\n                    <div *ngIf=\"submit && form.phone.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"form.phone.errors.required\">Phone is required.</span>\n                    </div>\n                  </div>\n\n\n                  <div class=\"form-group\">\n                    <label for=\"product-image\" class=\"mt-2\"> Documents</label>\n                    <dropzone class=\"dropzone\" [ngClass]=\"{'is-invalid': submit && form.documents.errors}\" (success)=\"onUploadSuccess($event)\" [config]=\"config\"></dropzone>\n                    <input id=\"documents\" name=\"documents\" type=\"hidden\" formControlName=\"documents\">\n                    <div *ngIf=\"submit && form.documents.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"form.documents.errors.required\">Documents are required. Upload at least 1.</span>\n                    </div>\n                    <div *ngIf=\"files.length>0\" class=\"dropzone-display\">\n                      <div class=\"row\">\n                        <div *ngFor=\"let file of files\" class=\"col-md-4\">\n                          <div class=\"document-display\">\n                            <a (click)=\"deleteImage(file)\" class=\"delete-image\"><i class=\"fas fa-trash-alt text-danger mr-1\"></i>\n                            </a>\n                            <img src=\"{{backend + '/getfile/?id='  + file}}\" class=\"img-fluid mx-auto d-block\">\n                            <!-- <img src=\"{{backend + '/images/?id='  + image.id}}\" alt=\"\"\n                              class=\"img-fluid mx-auto d-block\"> -->\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n\n                <div class=\"col-sm-6\">\n                    <div class=\"form-group\">\n                        <label for=\"name_ar\">إسم التاجر</label>\n                        <input id=\"name_ar\" name=\"name_ar\" type=\"text\" class=\"form-control\" formControlName=\"name_ar\"\n                          [ngClass]=\"{'is-invalid': submit && form.name_ar.errors}\">\n                        <div *ngIf=\"submit && form.name_ar.errors\" class=\"invalid-feedback\">\n                          <span *ngIf=\"form.name_ar.errors.required\">إسم التاجر is required.</span>\n                        </div>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"formrow-inputCity\">City</label>\n                                <input type=\"text\" class=\"form-control\" id=\"city\" formControlName=\"city\"\n                                [ngClass]=\"{'is-invalid': submit && form.city.errors}\">\n                                <div *ngIf=\"submit && form.city.errors\" class=\"invalid-feedback\">\n                                  <span *ngIf=\"form.city.errors.required\">City is required.</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"formrow-inputState\">Region</label>\n                                <ng-select formControlName=\"region\" [ngClass]=\"{'is-invalid': submit && form.region.errors}\" [items]=\"['Ar Riyadh','Western Region', 'Eastern Region', 'Medina Region', 'Aseer', 'Jazan']\"></ng-select>\n                                <div *ngIf=\"submit && form.region.errors\" class=\"invalid-feedback\">\n                                  <span *ngIf=\"form.region.errors.required\">Region is required.</span>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-lg-4\">\n                            <div class=\"form-group\">\n                                <label for=\"formrow-inputZip\">Zip</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"zip\" id=\"zip\"\n                                [ngClass]=\"{'is-invalid': submit && form.zip.errors}\">\n                                <div *ngIf=\"submit && form.zip.errors\" class=\"invalid-feedback\">\n                                  <span *ngIf=\"form.zip.errors.required\">Zip is required.</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\">\n                        <label for=\"address_ar\">العنوان</label>\n                        <input id=\"address_ar\" name=\"address_ar\" type=\"text\" class=\"form-control\" formControlName=\"address_ar\"\n                          [ngClass]=\"{'is-invalid': submit && form.address_ar.errors}\">\n                        <div *ngIf=\"submit && form.address_ar.errors\" class=\"invalid-feedback\">\n                          <span *ngIf=\"form.address_ar.errors.required\">Address is required.</span>\n                        </div>\n                      </div>\n\n                  <div class=\"form-group\">\n                    <label for=\"productdesc\">Notes</label>\n                    <textarea class=\"form-control\" [ngClass]=\"{'is-invalid': submit && form.description_en.errors}\" formControlName=\"description_en\" id=\"description_en\" rows=\"5\"></textarea>\n                    <div *ngIf=\"submit && form.description_en.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"form.description_en.errors.required\">Notes are required.</span>\n                    </div>\n                  </div>\n                  <div class=\"form-group\">\n                    <label for=\"productdesc\">ملاحظات</label>\n                    <textarea class=\"form-control\"  [ngClass]=\"{'is-invalid': submit && form.description_ar.errors}\" formControlName=\"description_ar\" id=\"description_ar\" rows=\"5\"></textarea>\n                    <div *ngIf=\"submit && form.description_ar.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"form.description_ar.errors.required\">ملاحظات are required.</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"mt-3\">\n                <input type=\"submit\" form=\"productForm\" class=\"btn btn-primary mr-1\" value=\"Save Changes\" [disabled]=\"submit\"/>\n                <button type=\"submit\" class=\"btn btn-secondary\">Cancel</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- end row -->\n\n  </div> <!-- container-fluid -->\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\nimport { MarketingService } from '../../../core/services/marketing.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-addseller',\n  templateUrl: './addseller.component.html',\n  styleUrls: ['./addseller.component.scss']\n})\nexport class AddsellerComponent implements OnInit {\n  backend = environment.backend;\n\n  productForm: FormGroup;\n  // bread crumb items\n  breadCrumbItems: Array<{}>;\n  // Form submition\n  submit: boolean = false;\n\n  config: DropzoneConfigInterface;\n  image = '';\n  file = '';\n  files: number[] = [];\n\n  constructor(private router: Router, public formBuilder: FormBuilder, private http: HttpClient, private setserv: MarketingService) {\n    this.config = setserv.getUploadConfig();\n\n  }\n  /**\n   * Returns form\n   */\n  get form() {\n    return this.productForm.controls;\n  }\n\n  ngOnInit() {\n    this.breadCrumbItems = [{ label: 'Sellers' }, { label: 'Edit Seller', active: true }];\n\n    this.productForm = this.formBuilder.group({\n      name_en: ['', [Validators.required]],\n      name_ar: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      phone: ['', [Validators.required]],\n      address_en: ['', [Validators.required]],\n      address_ar: ['', [Validators.required]],\n      description_ar: ['', [Validators.required]],\n      description_en: ['', [Validators.required]],\n      city: ['', [Validators.required]],\n      region: [null, [Validators.required]],\n      zip: ['', [Validators.required]],\n      documents: ['', [Validators.required]],\n    });\n    this.submit = false;\n  }\n\n  onAccept(file: any) {\n    this.image = file.name;\n    this.file = file;\n  }\n  /**\n   * Bootsrap validation form submit method\n   */\n  onUploadSuccess(event) {\n    // event[2].srcElement.then(response => response.json()).then(data => console.log(data)).catch(err => console.log(err));\n    event[0].previewElement.parentNode.removeChild(event[0].previewElement);\n\n    let response = JSON.parse(event[2].srcElement.response);\n    this.files.push(response.id);\n    console.log(this.productForm.controls);\n\n    this.productForm.controls.documents.setValue(this.files);\n    this.submit = false;\n\n  }\n  deleteImage(id) {\n    const index = this.files.indexOf(id);\n    if (index > -1) {\n      this.files.splice(index, 1); // 2nd parameter means remove one item only\n      this.productForm.controls.documents.setValue(this.files);\n    }\n  }\n\n  validSubmit() {\n    this.submit = true;\n\n    // stop here if form is invalid\n    if (this.productForm.invalid) {\n      return;\n    } else {\n      console.log(this.productForm);\n\n      this.setserv.addSeller(this.productForm.value).subscribe(data => this.router.navigate(['/sellers/list']));\n      this.submit = false;\n\n\n    }\n    // const formData = new FormData();\n    // formData.append('name', this.productForm.get('name').value);\n    // formData.append('manufacture_name', this.productForm.get('manufacture_name').value);\n    // formData.append('manufacture_brand', this.productForm.get('manufacture_brand').value);\n    // formData.append('price', this.productForm.get('price').value);\n    // formData.append('image', this.file, this.image);\n    //\n    // this.http.post<any>(`http://localhost:8000/api/products`, formData)\n    //   .subscribe((data) => {\n    //     // console.log('da', data);\n    //     return data;\n    //   });\n  }\n}\n","<div class=\"container-fluid\">\n\n  <!-- start page title -->\n  <app-page-title title=\"Add Seller\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\n  <!-- end page title -->\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n\n          <h4 class=\"card-title\">Basic Information</h4>\n          <p class=\"card-title-desc\">Fill all information</p>\n\n          <form [formGroup]=\"productForm\" id=\"productForm\" name=\"productForm\" (ngSubmit)=\"validSubmit()\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label for=\"shopname\">Seller Name</label>\n                  <input id=\"name_en\" name=\"name_en\" type=\"text\" class=\"form-control\" formControlName=\"name_en\" [ngClass]=\"{'is-invalid': submit && form.name_en.errors}\">\n                  <div *ngIf=\"submit && form.name_en.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.name_en.errors.required\">Name is required.</span>\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"email\">Email</label>\n                  <input id=\"email\" name=\"email\" type=\"text\" class=\"form-control\" formControlName=\"email\" [ngClass]=\"{'is-invalid': submit && form.email.errors}\">\n                  <div *ngIf=\"submit && form.email.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.email.errors.required\">Email is required.</span>\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"address_en\">Address</label>\n                  <input id=\"address_en\" name=\"address_en\" type=\"text\" class=\"form-control\" formControlName=\"address_en\" [ngClass]=\"{'is-invalid': submit && form.address_en.errors}\">\n                  <div *ngIf=\"submit && form.address_en.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.address_en.errors.required\">Address is required.</span>\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"phone\">Phone No.</label>\n                  <input id=\"phone\" name=\"phone\" type=\"text\" class=\"form-control\" formControlName=\"phone\" [ngClass]=\"{'is-invalid': submit && form.phone.errors}\">\n                  <div *ngIf=\"submit && form.phone.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.phone.errors.required\">Phone is required.</span>\n                  </div>\n                </div>\n\n\n                <div class=\"form-group\">\n                  <label for=\"product-image\" class=\"mt-2\"> Documents</label>\n                  <dropzone class=\"dropzone\" [ngClass]=\"{'is-invalid': submit && form.documents.errors}\" (success)=\"onUploadSuccess($event)\" [config]=\"config\"></dropzone>\n                  <input id=\"documents\" name=\"documents\" type=\"hidden\" formControlName=\"documents\">\n                  <div *ngIf=\"submit && form.documents.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.documents.errors.required\">Documents are required. Upload at least 1.</span>\n                  </div>\n                  <div *ngIf=\"files.length>0\" class=\"dropzone-display\">\n                    <div class=\"row\">\n                      <div *ngFor=\"let file of files\" class=\"col-md-4\">\n                        <div class=\"document-display\">\n                          <a (click)=\"deleteImage(file)\" class=\"delete-image\"><i class=\"fas fa-trash-alt text-danger mr-1\"></i>\n                          </a>\n                          <img src=\"{{backend + '/getfile/?id='  + file}}\" class=\"img-fluid mx-auto d-block\">\n                          <!-- <img src=\"{{backend + '/images/?id='  + image.id}}\" alt=\"\"\n                              class=\"img-fluid mx-auto d-block\"> -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label for=\"name_ar\">إسم التاجر</label>\n                  <input id=\"name_ar\" name=\"name_ar\" type=\"text\" class=\"form-control\" formControlName=\"name_ar\" [ngClass]=\"{'is-invalid': submit && form.name_ar.errors}\">\n                  <div *ngIf=\"submit && form.name_ar.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.name_ar.errors.required\">إسم التاجر is required.</span>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-lg-4\">\n                    <div class=\"form-group\">\n                      <label for=\"formrow-inputCity\">City</label>\n                      <input type=\"text\" class=\"form-control\" id=\"city\" formControlName=\"city\" [ngClass]=\"{'is-invalid': submit && form.city.errors}\">\n                      <div *ngIf=\"submit && form.city.errors\" class=\"invalid-feedback\">\n                        <span *ngIf=\"form.city.errors.required\">City is required.</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-4\">\n                    <div class=\"form-group\">\n                      <label for=\"formrow-inputState\">Region</label>\n                      <ng-select formControlName=\"region\" [ngClass]=\"{'is-invalid': submit && form.region.errors}\" [items]=\"['Ar Riyadh','Western Region', 'Eastern Region', 'Medina Region', 'Aseer', 'Jazan']\"></ng-select>\n                      <div *ngIf=\"submit && form.region.errors\" class=\"invalid-feedback\">\n                        <span *ngIf=\"form.region.errors.required\">Region is required.</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"col-lg-4\">\n                    <div class=\"form-group\">\n                      <label for=\"formrow-inputZip\">Zip</label>\n                      <input type=\"text\" class=\"form-control\" formControlName=\"zip\" id=\"zip\" [ngClass]=\"{'is-invalid': submit && form.zip.errors}\">\n                      <div *ngIf=\"submit && form.zip.errors\" class=\"invalid-feedback\">\n                        <span *ngIf=\"form.zip.errors.required\">Zip is required.</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"address_ar\">العنوان</label>\n                  <input id=\"address_ar\" name=\"address_ar\" type=\"text\" class=\"form-control\" formControlName=\"address_ar\" [ngClass]=\"{'is-invalid': submit && form.address_ar.errors}\">\n                  <div *ngIf=\"submit && form.address_ar.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.address_ar.errors.required\">Address is required.</span>\n                  </div>\n                </div>\n\n                <div class=\"form-group\">\n                  <label for=\"productdesc\">Notes</label>\n                  <textarea class=\"form-control\" [ngClass]=\"{'is-invalid': submit && form.description_en.errors}\" formControlName=\"description_en\" id=\"description_en\" rows=\"5\"></textarea>\n                  <div *ngIf=\"submit && form.description_en.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.description_en.errors.required\">Notes are required.</span>\n                  </div>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"productdesc\">ملاحظات</label>\n                  <textarea class=\"form-control\" [ngClass]=\"{'is-invalid': submit && form.description_ar.errors}\" formControlName=\"description_ar\" id=\"description_ar\" rows=\"5\"></textarea>\n                  <div *ngIf=\"submit && form.description_ar.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"form.description_ar.errors.required\">ملاحظات are required.</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"mt-3\">\n              <input type=\"submit\" form=\"productForm\" class=\"btn btn-primary mr-1\" value=\"Save Changes\" [disabled]=\"submit\" />\n              <button type=\"submit\" class=\"btn btn-secondary\">Cancel</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- end row -->\n\n</div> <!-- container-fluid -->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SellersRoutingModule } from './sellers-routing.module';\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { WidgetModule } from '../../shared/widget/widget.module';\n\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgbNavModule, NgbDropdownModule, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { DROPZONE_CONFIG } from 'ngx-dropzone-wrapper';\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { EditsellerComponent } from './editseller/editseller.component';\n\nimport { AddsellerComponent } from './addseller/addseller.component';\nimport { SellerslistComponent } from './sellerslist/sellerslist.component';\n\n\nconst config: DropzoneConfigInterface = {\n  // Change this to your upload POST address:\n\n};\n\n@NgModule({\n  // tslint:disable-next-line: max-line-length\n  declarations: [AddsellerComponent, SellerslistComponent, EditsellerComponent],\n  imports: [\n    CommonModule,\n    SellersRoutingModule,\n    NgbNavModule,\n    FormsModule,\n    Ng2SearchPipeModule,\n    NgbDropdownModule,\n    DropzoneModule,\n    ReactiveFormsModule,\n    UIModule,\n    WidgetModule,\n    Ng5SliderModule,\n    NgSelectModule,\n    NgbPaginationModule\n  ],\n  providers: [\n    {\n      provide: DROPZONE_CONFIG,\n      useValue: config\n    }\n  ]\n})\nexport class SellersModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { Seller } from '../../../core/models/seller.models';\nimport { MarketingService } from '../../../core/services/marketing.service';\nimport { Router } from '@angular/router';\n\nimport { customersData } from './data';\n\n@Component({\n  selector: 'app-sellerslist',\n  templateUrl: './sellerslist.component.html',\n  styleUrls: ['./sellerslist.component.scss']\n})\nexport class SellerslistComponent implements OnInit {\n\n // bread crumb items\n breadCrumbItems: Array<{}>;\n\n customersData: Seller[];\n\n term: any;\n\n // page\n currentpage: number;\n\n constructor(private router: Router, private marketingService: MarketingService) { }\n\n ngOnInit() {\n   this.breadCrumbItems = [{ label: 'Sellers' }, { label: 'Sellers', active: true }];\n   this.marketingService.getSellers().subscribe(val =>   { this.customersData = val, console.log(val);\n    });\n   this.currentpage = 0;\n\n   /**\n    * Fetches the data\n    */\n   // this._fetchData();\n }\n deleteGroupItem(id) {\n   this.marketingService.delSeller(id).subscribe(data => {\n     this.customersData = this.customersData.filter(data => data.id != id);\n\n     // this.sharedDataService.changeTable(newTable);\n     // modal.close();\n     // this.newForm.reset();\n   });\n }\n editItem(id){\n   this.router.navigate(['/sellers/edit/'+id]);\n }\n /**\n  * Customers data fetches\n  */\n // private _fetchData() {\n //   this.customersData = customersData;\n // }\n}\n","<div class=\"container-fluid\">\n\n    <app-page-title title=\"Sellers\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\n\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <div class=\"row mb-2\">\n              <div class=\"col-sm-4\">\n                <div class=\"search-box mr-2 mb-2 d-inline-block\">\n                  <div class=\"position-relative\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" [(ngModel)]=\"term\" />\n                    <i class=\"bx bx-search-alt search-icon\"></i>\n                  </div>\n                </div>\n              </div>\n\n              <!-- end col-->\n            </div>\n            <div class=\"table-responsive\">\n              <table class=\"table table-centered table-nowrap\">\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Seller Name</th>\n                    <th>إسم التاحر</th>\n                    <th>Phone / Email</th>\n                    <th>Address</th>\n                    <th>Sales</th>\n                    <th>Wallet Balance</th>\n                    <th>Joining Date</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let customers of customersData  | filter:term ;let i = index;\">\n                    <td>\n                      <div class=\"custom-control custom-checkbox\">\n                        <input id=\"customCheck{{i}}\" type=\"checkbox\" class=\"custom-control-input\" />\n                        <label class=\"custom-control-label\" for=\"customCheck{{i}}\">&nbsp;</label>\n                      </div>\n                    </td>\n                    <td>{{customers.name_en}}</td>\n                    <td>{{customers.name_ar}}</td>\n                    <td>\n                      <p class=\"mb-1\">{{customers.phone}}</p>\n                      <p class=\"mb-0\">{{customers.email}}</p>\n                    </td>\n\n                    <td>{{customers.address_en}}</td>\n                    <td>\n                        {{customers.sales}}\n                    </td>\n                    <td>{{customers.balance}}</td>\n                    <td>{{customers.createdAt  | date:'dd/LL/YYYY' }}</td>\n                    <td>\n                      <div class=\"dropdown\" ngbDropdown container=\"body\" placement=\"bottom-right\">\n                        <a href=\"javascript: void(0);\" class=\"dropdown-toggle card-drop\" data-toggle=\"dropdown\"\n                          ngbDropdownToggle aria-expanded=\"false\">\n                          <i class=\"mdi mdi-dots-horizontal font-size-18\"></i>\n                        </a>\n                        <ul class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n                          <li><a (click)=\"editItem(customers.id)\" class=\"dropdown-item\"><i\n                                class=\"fas fa-pencil-alt text-success mr-1\"></i>\n                              Edit</a></li>\n                          <li><a (click)=\"deleteGroupItem(customers.id)\" class=\"dropdown-item\"><i\n                                class=\"fas fa-trash-alt text-danger mr-1\"></i>\n                              Delete</a></li>\n                        </ul>\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <!-- pagination -->\n            <!-- <ngb-pagination [collectionSize]=\"50\" [(page)]=\"currentpage\"\n              class=\"pagination pagination-rounded justify-content-end mb-2\" aria-label=\"Default pagination\">\n            </ngb-pagination> -->\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- end row -->\n  </div>\n"],"sourceRoot":"webpack:///"}