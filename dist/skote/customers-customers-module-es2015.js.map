{"version":3,"sources":["./src/app/pages/customers/customers.component.ts","./src/app/pages/customers/customers.component.html","./src/app/pages/customers/orders/orders.component.ts","./src/app/pages/customers/orders/orders.component.html","./src/app/pages/customers/customers.module.ts","./src/app/pages/customers/customers-routing.module.ts"],"names":[],"mappings":"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","file":"customers-customers-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Customers } from './customers.model';\nimport { CustomerService } from '../../core/services/customer.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\nimport { customersData } from './data';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\n\n/**\n * Ecomerce Customers component\n */\nexport class CustomersComponent implements OnInit {\n\n  // bread crumb items\n  breadCrumbItems: Array<{}>;\n\n  customersData: any[];\n\n  term: any;\n  editForm: FormGroup;\n  submitted = false;\n  error = \"\";\n\n  // page\n  currentpage: number;\n\n  constructor(private customerService: CustomerService,\n    private modalService: NgbModal,\n    private formBuilder: FormBuilder,\n  ) { }\n\n\n  ngOnInit() {\n    this.breadCrumbItems = [{ label: 'Customers' }, { label: 'Customers', active: true }];\n\n    this.currentpage = 1;\n    this.customerService.getCustomers().subscribe(val => {\n      this.customersData = val; console.log(val);\n    });\n    this.editForm = this.formBuilder.group({\n      id: [{ value: '', disabled: true }, [Validators.required]],\n      name: ['', [Validators.required]],\n      phone: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n    });\n    /**\n     * Fetches the data\n     */\n    // this._fetchData();\n  }\n  get fe() { return this.editForm.controls; }\n  openEdit(content, id) {\n    let newTable = this.customersData.filter(data => data.id == id);\n    this.editForm.controls['id'].setValue(newTable[0].id);\n    this.editForm.controls['name'].setValue(newTable[0].name);\n    this.editForm.controls['phone'].setValue(newTable[0].phone);\n    this.editForm.controls['address'].setValue(newTable[0].address);\n    this.editForm.controls['email'].setValue(newTable[0].email);\n\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.editForm.reset();\n      console.log(`Closed with: ${result}`);\n    }, (reason) => {\n      this.editForm.reset();\n      // console.log(      `Dismissed ${this.getDismissReason(reason)}` );\n    });\n  }\n  /**\n   * Customers data fetches\n   */\n  // private _fetchData() {\n  //   this.customersData = customersData;\n  // }\n  deleteGroupItem(id) {\n    this.customerService.delCustomer(id).subscribe(data => {\n      this.customersData = this.customersData.filter(data => data.id != id);\n\n      // this.sharedDataService.changeTable(newTable);\n      // modal.close();\n      // this.newForm.reset();\n    });\n  }\n  onEdit(modal) {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.editForm.invalid) {\n      return;\n    } else {\n      let post_data = this.editForm.getRawValue();\n      this.customerService.updateCustomer(post_data).subscribe(data => {\n        console.log(post_data);\n\n        let findIndex = this.customersData.findIndex(data => data.id == post_data.id);\n        this.customersData[findIndex] = { id: post_data.id, name: post_data.name, email: post_data.email, phone: post_data.phone, address: post_data.address, createdAt: this.customersData[findIndex].createdAt };\n        // this.sharedDataService.changeTable(this.customersData);\n        this.submitted = false;\n        modal.close();\n        this.editForm.reset();\n      });\n    }\n  }\n}\n","<div class=\"container-fluid\">\n\n  <app-page-title title=\"Customers\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"row mb-2\">\n            <div class=\"col-sm-4\">\n              <div class=\"search-box mr-2 mb-2 d-inline-block\">\n                <div class=\"position-relative\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" [(ngModel)]=\"term\" />\n                  <i class=\"bx bx-search-alt search-icon\"></i>\n                </div>\n              </div>\n            </div>\n\n            <!-- end col-->\n          </div>\n          <div class=\"table-responsive\">\n            <table class=\"table table-centered table-nowrap\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Phone / Email</th>\n                  <th>Address</th>\n                  <th>Rating</th>\n                  <th>Total purchases</th>\n                  <th>Joining Date</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let customers of customersData  | filter:term ;let i = index;\">\n                  <td>\n                    <div class=\"custom-control custom-checkbox\">\n                      <input id=\"customCheck{{i}}\" type=\"checkbox\" class=\"custom-control-input\" />\n                      <label class=\"custom-control-label\" for=\"customCheck{{i}}\">&nbsp;</label>\n                    </div>\n                  </td>\n                  <td>{{customers.name}}</td>\n                  <td>\n                    <p class=\"mb-1\">{{customers.phone}}</p>\n                    <p class=\"mb-0\">{{customers.email}}</p>\n                  </td>\n\n                  <td>{{customers.address}}</td>\n                  <td>\n                    <span class=\"badge badge-success font-size-12\">\n                      <i class=\"mdi mdi-star mr-1\"></i>\n                      {{customers.rating}}\n                    </span>\n                  </td>\n                  <td>{{customers.balance}}</td>\n                  <td>{{customers.createdAt  | date:'dd/LL/YYYY' }}</td>\n                  <td>\n                    <div class=\"dropdown\" container=\"body\" ngbDropdown placement=\"bottom-right\">\n                      <a href=\"javascript: void(0);\" class=\"dropdown-toggle card-drop\" data-toggle=\"dropdown\"\n                        ngbDropdownToggle aria-expanded=\"false\">\n                        <i class=\"mdi mdi-dots-horizontal font-size-18\"></i>\n                      </a>\n                      <ul class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n                        <a class=\"dropdown-item\" (click)=\"openEdit(editContent, customers.id)\"><i class=\"mdi mdi-account-edit\"></i>Edit</a>\n                        <a class=\"dropdown-item\" (click)=\"deleteGroupItem(customers.id)\"><i class=\"mdi mdi-delete\"></i>delete</a>\n                      </ul>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <!-- pagination -->\n          <!-- <ngb-pagination [collectionSize]=\"50\" [(page)]=\"currentpage\"\n            class=\"pagination pagination-rounded justify-content-end mb-2\" aria-label=\"Default pagination\">\n          </ngb-pagination> -->\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- end row -->\n</div>\n\n<ng-template #editContent role=\"document\" let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title mt-0\">Edit Customer</h5>\n    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"modal.dismiss('Cross click')\">×</button>\n  </div>\n  <div class=\"modal-body\">\n    <form class=\"form-horizontal\" id=\"editForm\" [formGroup]=\"editForm\" (ngSubmit)=\"onEdit(modal)\">\n\n      <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n      <div class=\"form-group\">\n        <label for=\"name_en\">ID</label>\n\n        <input type=\"text\" formControlName=\"id\" class=\"form-control\" id=\"id\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.id.errors }\"/>\n        <div *ngIf=\"submitted && fe.id.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.id.errors.required\">ID is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"name_en\">Name</label>\n\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"name\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.name.errors }\" />\n        <div *ngIf=\"submitted && fe.name.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.name.errors.required\">Name is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"name_ar\">Phone</label>\n\n        <input type=\"text\" formControlName=\"phone\" class=\"form-control\" id=\"phone\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.phone.errors }\" />\n        <div *ngIf=\"submitted && fe.phone.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.phone.errors.required\">phone is required</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n\n        <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.email.errors }\" />\n        <div *ngIf=\"submitted && fe.email.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.email.errors.required\">Email is required</div>\n          <div *ngIf=\"fe.email.errors.email\">Email must be a valid email address</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"address\">Address</label>\n\n        <input type=\"text\" formControlName=\"address\" class=\"form-control\" id=\"address\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.address.errors }\" />\n        <div *ngIf=\"submitted && fe.address.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.address.errors.required\">Address is required</div>\n        </div>\n      </div>\n\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n    <input class=\"btn btn-primary\" type=\"submit\" form=\"editForm\" value=\"Save\"/>\n\n  </div>\n</ng-template>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MarketingService } from '../../../core/services/marketing.service';\nimport { CustomerService } from '../../../core/services/customer.service';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\n\n/**\n * Ecommerce orders component\n */\nexport class OrdersComponent implements OnInit {\n\n  // bread crumb items\n  breadCrumbItems: Array<{}>;\n  term: any;\n  order_status: Array<String>;\n  transactions;\n  selectedStatus;\n  change_badge = [true, ];\n  editForm;\n  backend = environment.backend;\n  error = '';\n  submitted = false;\n  submittedEdit = false;\n  generateQrcode = \"\";\n  barcodeImage = \"\";\n  selectedProductTitle = \"\";\n  selectedProductPrice = \"\";\n  selectedProductImage = \"\";\n  constructor(private customerService: CustomerService, private modalService: NgbModal, private formBuilder: FormBuilder, private marketingService: MarketingService) {}\n\n  ngOnInit() {\n    this.customerService.getOrders().subscribe(orders => {\n      this.transactions = orders;\n      console.log(orders)\n    })\n    this.editForm = this.formBuilder.group({\n      order_id: [''],\n      // customer: ['', [Validators.required]],\n      // discount: ['', [Validators.required]],\n      // total: ['', [Validators.required]],\n      status: ['', [Validators.required]]\n    });\n    this.order_status = ['WAITING', 'SHIPPED', 'PREPARED', 'HAND_OVERED', 'DELIVERED', 'REJECTED', 'CANCELED', 'ACCEPTED'];\n    this.breadCrumbItems = [{ label: 'Customers' }, { label: 'Orders', active: true }];\n  }\n  get fe() { return this.editForm.controls; }\n\n  selectedStatusFunc(status) {\n    console.log(status)\n  }\n\n  openDetail(content, product) {\n    this.generateQrcode = product.barcode;\n    this.selectedProductTitle = product.name_en;\n    this.selectedProductPrice = product.extra_price;\n    this.selectedProductImage = product.images[0];\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      // this.editForm.reset();\n      console.log(    `Closed with: ${result}` );\n    }, (reason) => {\n      // this.editForm.reset();\n      console.log(      `Dismissed ${this.getDismissReason(reason)}` );\n    });\n  }\n\n  openEdit(content, id) {\n    let newTable = this.transactions.filter(item => item._id == id);\n\n    this.editForm.controls['order_id'].setValue(newTable[0].order_id);\n    // this.editForm.controls['customer'].setValue(newTable[0].customer_id.name);\n    // this.editForm.controls['discount'].setValue(newTable[0].coupon_id.code);\n    // this.editForm.controls['total'].setValue(newTable[0].totalPrice);\n    this.editForm.controls['status'].setValue(newTable[0].status);\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      // this.editForm.reset();\n      console.log(    `Closed with: ${result}` );\n    }, (reason) => {\n      // this.editForm.reset();\n      console.log(      `Dismissed ${this.getDismissReason(reason)}` );\n    });\n\n    \n  }\n\n  onEdit(modal) {\n    this.submittedEdit = true;\n\n    if (this.editForm.invalid) {\n      return;\n    } else {\n      let post_data = this.editForm.getRawValue();\n\n      this.customerService.updateOrder(post_data).subscribe(data => {\n        this.transactions = this.transactions.map(item => {\n          if (item.order_id == post_data.order_id) {\n            item.status = post_data.status;\n          }\n\n          return item;\n        });\n      })\n      \n      modal.close();\n    }\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  deleteGroupItem(id) {\n    this.customerService.delOrders(id).subscribe(data => {\n        this.transactions = this.transactions.filter(item => item._id != id);\n    })\n  }\n\n  changeOrderStatus(order_id, status) {\n    console.log(order_id,status);\n    this.customerService.updateOrder({ order_id: order_id, status }).subscribe(data => {\n      this.transactions = this.transactions.map(item => {\n        if (item.order_id == order_id) {\n          item.status = status;\n        }\n        return item;\n      });\n    })\n    \n  }\n}\n","<div class=\"container-fluid\">\n  <app-page-title title=\"Orders\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          \n          <!-- Table -->\n          <div class=\"table-responsive mb-0\">\n            <table class=\"table table-centered table-nowrap\">\n              <thead class=\"thead-light\">\n                <tr>\n                  <th style=\"width: 20px;\">\n                    <div class=\"custom-control custom-checkbox\">\n                      <input id=\"customCheck\" type=\"checkbox\" class=\"custom-control-input\" />\n                      <label class=\"custom-control-label\" for=\"customCheck\">&nbsp;</label>\n                    </div>\n                  </th>\n                  <th>Order ID</th>\n                  <th>Product</th>\n                  <th>Customer</th>\n                  <th>Discount code</th>\n                  <th>Total</th>\n                  <th>Date</th>\n                  <th>Status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let data of transactions\">\n                  <td>\n                    <div class=\"custom-control custom-checkbox\">\n                      <input id=\"customCheck{{data.index}}\" type=\"checkbox\" class=\"custom-control-input\" />\n                      <label class=\"custom-control-label\" for=\"customCheck{{data.index}}\">&nbsp;</label>\n                    </div>\n                  </td>\n                  <td>\n                    <a href=\"javascript: void(0);\" class=\"text-body font-weight-bold\">{{data.order_id}}</a>\n                  </td>\n                  <td>\n                    <div *ngFor=\"let product of data.products\">\n                      <a href=\"javascript: void(0);\" class=\"text-body font-weight-bold\" (click)=\"openDetail(detailContent, product)\">{{product.name_en}} </a>\n                    </div>\n                  </td>\n                  <td>{{data.customer_id.name}}</td>\n                  <td>\n                    {{data.coupon_id?.code}}\n                  </td>\n                  <td>{{data.price}}</td>\n                  <td>{{data.createdAt | date:'dd/LL/YYYY' }}</td>\n                  <td>\n                    <button [animation]=\"true\" [ngbPopover]=\"popOver\" [popoverTitle]=\"popTitle\" class=\"badge badge-pill badge-soft-success font-size-12\" [ngClass]=\" { 'badge-soft-danger': data.status === 'REJECTED' || data.status === 'CANCELED', 'badge-soft-warning':data.status === 'SHIPPED' || data.status === 'DELIVERED', 'badge-soft-info': data.status === 'WAITING' }\">{{data.status}}</button>\n                    <ng-template #popOver>\n                      <ul class=\"menu_list\">\n                        <li (click)=\"changeOrderStatus(data.order_id,'WAITING')\">WAITING</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'SHIPPED')\">SHIPPED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'PREPARED')\">PREPARED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'HAND_OVERED')\">HAND_OVERED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'DELIVERED')\">DELIVERED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'REJECTED')\">REJECTED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'CANCELED')\">CANCELED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'ACCEPTED')\">ACCEPTED</li>\n                      </ul>\n                    </ng-template>\n                    <!-- <ng-select *ngIf=\"change_badge\" [items]=\"order_status\" style=\"width: 150px;\" [appendTo]=\"'body'\" [(ngModel)]=\"selectedStatus\"></ng-select> -->\n                  </td>\n                  <td>\n                    <!-- Button trigger modal -->\n                    <div ngbDropdown container=\"body\" placement=\"bottom-left\">\n                      <i class=\"mdi mdi-dots-vertical dropdown-toggle\" ngbDropdownToggle data-toggle=\"dropdown\"\n                        aria-expanded=\"true\"></i>\n                      <div class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n                        <a class=\"dropdown-item\" (click)=\"openEdit(editContent, data._id)\"><i class=\"mdi mdi-account-edit\"></i>Status</a>\n                        <a class=\"dropdown-item\" (click)=\"deleteGroupItem(data._id)\"><i class=\"mdi mdi-delete\"></i>Delete</a>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <!-- End table -->\n          \n        </div>\n      </div>\n    </div>\n  </div>\n\n  \n  <!-- end table -->\n  \n</div>\n\n<ng-template #popTitle><b>Change Status</b></ng-template>\n\n<ng-template #editContent role=\"document\" let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title mt-0\">Change Status</h5>\n    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"modal.dismiss('Cross click')\">×</button>\n  </div>\n  <div class=\"modal-body\">\n    <form class=\"form-horizontal\" id=\"editForm\" [formGroup]=\"editForm\" (ngSubmit)=\"onEdit(modal)\">\n\n      <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n      <!-- <div class=\"form-group\">\n        <label for=\"order_id\">Order ID</label>\n\n        <input type=\"text\" formControlName=\"order_id\" class=\"form-control\" id=\"order_id\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.order_id.errors }\" />\n        <div *ngIf=\"submittedEdit && fe.order_id.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.order_id.errors.required\">Order ID is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"customer\">Customer</label>\n\n        <input type=\"text\" formControlName=\"customer\" class=\"form-control\" id=\"customer\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.customer.errors }\" />\n        <div *ngIf=\"submittedEdit && fe.customer.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.customer.errors.required\">Customer is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"discount\">Discount code</label>\n\n        <input type=\"text\" formControlName=\"discount\" class=\"form-control\" id=\"discount\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.discount.errors }\" />\n        <div *ngIf=\"submittedEdit && fe.discount.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.discount.errors.required\">Discount code is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"total\">Total</label>\n\n        <input type=\"text\" formControlName=\"total\" class=\"form-control\" id=\"total\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.total.errors }\" />\n        <div *ngIf=\"submittedEdit && fe.total.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.total.errors.required\"> Total is required</div>\n        </div>\n      </div> -->\n      <div class=\"form-group\">\n        <!-- <label for=\"status\">Status</label> -->\n        <ng-select *ngIf=\"change_badge\" [items]=\"order_status\" formControlName=\"status\"></ng-select>\n        <div *ngIf=\"submittedEdit && fe.status.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.status.errors.required\">Status is required</div>\n        </div>\n      </div>\n\n\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n    <input class=\"btn btn-primary\" type=\"submit\" form=\"editForm\" value=\"Save\"/>\n\n  </div>\n</ng-template>\n\n<ng-template #detailContent role=\"document\" let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title mt-0\">Order Details</h5>\n    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"modal.dismiss('Cross click')\">×</button>\n  </div>\n  <div class=\"modal-body\">\n\n    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n    <div class=\"d-flex mx-2\">\n      <div>\n        <img style=\"width: 200px; height: 200px;\" src=\"{{backend + '/getfile/?id='  + selectedProductImage}}\" />\n      </div>\n      <div class=\"ml-2\">\n        <div class=\"d-flex\">\n          <label id=\"product_name mr-2\">Title: </label>\n          <div for=\"product_name\" class=\"font-weight-bold\">&nbsp; {{selectedProductTitle}}</div>\n        </div>\n        <div class=\"d-flex mt-2\">\n          <label id=\"product_price mr-2\">Price: </label>\n          <div for=\"product_price\" class=\"font-weight-bold\">&nbsp; {{selectedProductPrice}}</div>\n        </div>\n        <div class=\"d-flex mt-2\">\n          <label id=\"qrcode mr-2\">Qrcode: </label>\n          <div for=\"qrcode\" class=\"font-weight-bold\">&nbsp; {{generateQrcode}}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center\">\n      <qrcode [qrdata]=\"generateQrcode\" [width]=\"200\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n    <!-- <button class=\"btn btn-primary\" (click)=\"generateBC()\">Generate a new code</button> -->\n\n  </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CustomersRoutingModule } from './customers-routing.module';\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { WidgetModule } from '../../shared/widget/widget.module';\n\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgbAlertModule, NgbNavModule, NgbDropdownModule, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { DROPZONE_CONFIG } from 'ngx-dropzone-wrapper';\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CustomersComponent } from './customers.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nconst config: DropzoneConfigInterface = {\n  // Change this to your upload POST address:\n\n};\n\n\n@NgModule({\n  // tslint:disable-next-line: max-line-length\n  declarations: [CustomersComponent, OrdersComponent],\n  imports: [\n    CommonModule,\n    CustomersRoutingModule,\n    NgbNavModule,\n    FormsModule,\n    Ng2SearchPipeModule,\n    NgbAlertModule,\n    NgbDropdownModule,\n    DropzoneModule,\n    ReactiveFormsModule,\n    UIModule,\n    WidgetModule,\n    Ng5SliderModule,\n    NgSelectModule,\n    NgbPaginationModule,\n    QRCodeModule,\n    NgbModule\n  ],\n  providers: [\n    {\n      provide: DROPZONE_CONFIG,\n      useValue: config\n    }\n  ]\n})\nexport class CustomersModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomersComponent } from './customers.component';\nimport { OrdersComponent } from './orders/orders.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'list' },\n\n\n  {\n    path: 'list',\n    component: CustomersComponent,\n  },\n  {\n      path: 'orders',\n      component: OrdersComponent,\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomersRoutingModule { }\n"],"sourceRoot":"webpack:///"}