{"version":3,"sources":["webpack:///src/app/pages/customers/customers.component.ts","webpack:///src/app/pages/customers/customers.component.html","webpack:///src/app/pages/customers/orders/orders.component.ts","webpack:///src/app/pages/customers/orders/orders.component.html","webpack:///src/app/pages/customers/customers.module.ts","webpack:///src/app/pages/customers/customers-routing.module.ts"],"names":["CustomersComponent","customerService","modalService","formBuilder","submitted","error","breadCrumbItems","label","active","currentpage","getCustomers","subscribe","val","customersData","console","log","editForm","group","id","value","disabled","required","name","phone","email","address","controls","content","newTable","filter","data","setValue","open","ariaLabelledBy","result","then","reset","reason","delCustomer","modal","invalid","post_data","getRawValue","updateCustomer","findIndex","createdAt","close","selector","templateUrl","styleUrls","OrdersComponent","marketingService","change_badge","backend","submittedEdit","generateQrcode","barcodeImage","selectedProductTitle","selectedProductPrice","selectedProductImage","getOrders","orders","transactions","order_id","status","order_status","product","barcode","name_en","extra_price","images","getDismissReason","item","_id","updateOrder","map","ESC","BACKDROP_CLICK","delOrders","config","CustomersModule","provide","useValue","declarations","imports","providers","routes","path","redirectTo","component","CustomersRoutingModule","forChild","exports"],"mappings":"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","file":"customers-customers-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Customers } from './customers.model';\nimport { CustomerService } from '../../core/services/customer.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\nimport { customersData } from './data';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.scss']\n})\n\n/**\n * Ecomerce Customers component\n */\nexport class CustomersComponent implements OnInit {\n\n  // bread crumb items\n  breadCrumbItems: Array<{}>;\n\n  customersData: any[];\n\n  term: any;\n  editForm: FormGroup;\n  submitted = false;\n  error = \"\";\n\n  // page\n  currentpage: number;\n\n  constructor(private customerService: CustomerService,\n    private modalService: NgbModal,\n    private formBuilder: FormBuilder,\n  ) { }\n\n\n  ngOnInit() {\n    this.breadCrumbItems = [{ label: 'Customers' }, { label: 'Customers', active: true }];\n\n    this.currentpage = 1;\n    this.customerService.getCustomers().subscribe(val => {\n      this.customersData = val; console.log(val);\n    });\n    this.editForm = this.formBuilder.group({\n      id: [{ value: '', disabled: true }, [Validators.required]],\n      name: ['', [Validators.required]],\n      phone: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      address: ['', [Validators.required]],\n    });\n    /**\n     * Fetches the data\n     */\n    // this._fetchData();\n  }\n  get fe() { return this.editForm.controls; }\n  openEdit(content, id) {\n    let newTable = this.customersData.filter(data => data.id == id);\n    this.editForm.controls['id'].setValue(newTable[0].id);\n    this.editForm.controls['name'].setValue(newTable[0].name);\n    this.editForm.controls['phone'].setValue(newTable[0].phone);\n    this.editForm.controls['address'].setValue(newTable[0].address);\n    this.editForm.controls['email'].setValue(newTable[0].email);\n\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.editForm.reset();\n      console.log(`Closed with: ${result}`);\n    }, (reason) => {\n      this.editForm.reset();\n      // console.log(      `Dismissed ${this.getDismissReason(reason)}` );\n    });\n  }\n  /**\n   * Customers data fetches\n   */\n  // private _fetchData() {\n  //   this.customersData = customersData;\n  // }\n  deleteGroupItem(id) {\n    this.customerService.delCustomer(id).subscribe(data => {\n      this.customersData = this.customersData.filter(data => data.id != id);\n\n      // this.sharedDataService.changeTable(newTable);\n      // modal.close();\n      // this.newForm.reset();\n    });\n  }\n  onEdit(modal) {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.editForm.invalid) {\n      return;\n    } else {\n      let post_data = this.editForm.getRawValue();\n      this.customerService.updateCustomer(post_data).subscribe(data => {\n        console.log(post_data);\n\n        let findIndex = this.customersData.findIndex(data => data.id == post_data.id);\n        this.customersData[findIndex] = { id: post_data.id, name: post_data.name, email: post_data.email, phone: post_data.phone, address: post_data.address, createdAt: this.customersData[findIndex].createdAt };\n        // this.sharedDataService.changeTable(this.customersData);\n        this.submitted = false;\n        modal.close();\n        this.editForm.reset();\n      });\n    }\n  }\n}\n","<div class=\"container-fluid\">\n\n  <app-page-title title=\"Customers\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <div class=\"row mb-2\">\n            <div class=\"col-sm-4\">\n              <div class=\"search-box mr-2 mb-2 d-inline-block\">\n                <div class=\"position-relative\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" [(ngModel)]=\"term\" />\n                  <i class=\"bx bx-search-alt search-icon\"></i>\n                </div>\n              </div>\n            </div>\n\n            <!-- end col-->\n          </div>\n          <div class=\"table-responsive\">\n            <table class=\"table table-centered table-nowrap\">\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Phone / Email</th>\n                  <th>Address</th>\n                  <th>Rating</th>\n                  <th>Total purchases</th>\n                  <th>Joining Date</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let customers of customersData  | filter:term ;let i = index;\">\n                  <td>\n                    <div class=\"custom-control custom-checkbox\">\n                      <input id=\"customCheck{{i}}\" type=\"checkbox\" class=\"custom-control-input\" />\n                      <label class=\"custom-control-label\" for=\"customCheck{{i}}\">&nbsp;</label>\n                    </div>\n                  </td>\n                  <td>{{customers.name}}</td>\n                  <td>\n                    <p class=\"mb-1\">{{customers.phone}}</p>\n                    <p class=\"mb-0\">{{customers.email}}</p>\n                  </td>\n\n                  <td>{{customers.address}}</td>\n                  <td>\n                    <span class=\"badge badge-success font-size-12\">\n                      <i class=\"mdi mdi-star mr-1\"></i>\n                      {{customers.rating}}\n                    </span>\n                  </td>\n                  <td>{{customers.balance}}</td>\n                  <td>{{customers.createdAt  | date:'dd/LL/YYYY' }}</td>\n                  <td>\n                    <div class=\"dropdown\" container=\"body\" ngbDropdown placement=\"bottom-right\">\n                      <a href=\"javascript: void(0);\" class=\"dropdown-toggle card-drop\" data-toggle=\"dropdown\"\n                        ngbDropdownToggle aria-expanded=\"false\">\n                        <i class=\"mdi mdi-dots-horizontal font-size-18\"></i>\n                      </a>\n                      <ul class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n                        <a class=\"dropdown-item\" (click)=\"openEdit(editContent, customers.id)\"><i class=\"mdi mdi-account-edit\"></i>Edit</a>\n                        <a class=\"dropdown-item\" (click)=\"deleteGroupItem(customers.id)\"><i class=\"mdi mdi-delete\"></i>delete</a>\n                      </ul>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <!-- pagination -->\n          <!-- <ngb-pagination [collectionSize]=\"50\" [(page)]=\"currentpage\"\n            class=\"pagination pagination-rounded justify-content-end mb-2\" aria-label=\"Default pagination\">\n          </ngb-pagination> -->\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- end row -->\n</div>\n\n<ng-template #editContent role=\"document\" let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title mt-0\">Edit Customer</h5>\n    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"modal.dismiss('Cross click')\">×</button>\n  </div>\n  <div class=\"modal-body\">\n    <form class=\"form-horizontal\" id=\"editForm\" [formGroup]=\"editForm\" (ngSubmit)=\"onEdit(modal)\">\n\n      <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n      <div class=\"form-group\">\n        <label for=\"name_en\">ID</label>\n\n        <input type=\"text\" formControlName=\"id\" class=\"form-control\" id=\"id\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.id.errors }\"/>\n        <div *ngIf=\"submitted && fe.id.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.id.errors.required\">ID is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"name_en\">Name</label>\n\n        <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"name\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.name.errors }\" />\n        <div *ngIf=\"submitted && fe.name.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.name.errors.required\">Name is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"name_ar\">Phone</label>\n\n        <input type=\"text\" formControlName=\"phone\" class=\"form-control\" id=\"phone\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.phone.errors }\" />\n        <div *ngIf=\"submitted && fe.phone.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.phone.errors.required\">phone is required</div>\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n\n        <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.email.errors }\" />\n        <div *ngIf=\"submitted && fe.email.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.email.errors.required\">Email is required</div>\n          <div *ngIf=\"fe.email.errors.email\">Email must be a valid email address</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"address\">Address</label>\n\n        <input type=\"text\" formControlName=\"address\" class=\"form-control\" id=\"address\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.address.errors }\" />\n        <div *ngIf=\"submitted && fe.address.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.address.errors.required\">Address is required</div>\n        </div>\n      </div>\n\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n    <input class=\"btn btn-primary\" type=\"submit\" form=\"editForm\" value=\"Save\"/>\n\n  </div>\n</ng-template>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MarketingService } from '../../../core/services/marketing.service';\nimport { CustomerService } from '../../../core/services/customer.service';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { environment } from 'src/environments/environment';\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\n\n/**\n * Ecommerce orders component\n */\nexport class OrdersComponent implements OnInit {\n\n  // bread crumb items\n  breadCrumbItems: Array<{}>;\n  term: any;\n  order_status: Array<String>;\n  transactions;\n  selectedStatus;\n  change_badge = [true, ];\n  editForm;\n  backend = environment.backend;\n  error = '';\n  submitted = false;\n  submittedEdit = false;\n  generateQrcode = \"\";\n  barcodeImage = \"\";\n  selectedProductTitle = \"\";\n  selectedProductPrice = \"\";\n  selectedProductImage = \"\";\n  constructor(private customerService: CustomerService, private modalService: NgbModal, private formBuilder: FormBuilder, private marketingService: MarketingService) {}\n\n  ngOnInit() {\n    this.customerService.getOrders().subscribe(orders => {\n      this.transactions = orders;\n      console.log(orders)\n    })\n    this.editForm = this.formBuilder.group({\n      order_id: [''],\n      // customer: ['', [Validators.required]],\n      // discount: ['', [Validators.required]],\n      // total: ['', [Validators.required]],\n      status: ['', [Validators.required]]\n    });\n    this.order_status = ['WAITING', 'SHIPPED', 'PREPARED', 'HAND_OVERED', 'DELIVERED', 'REJECTED', 'CANCELED', 'ACCEPTED'];\n    this.breadCrumbItems = [{ label: 'Customers' }, { label: 'Orders', active: true }];\n  }\n  get fe() { return this.editForm.controls; }\n\n  selectedStatusFunc(status) {\n    console.log(status)\n  }\n\n  openDetail(content, product) {\n    this.generateQrcode = product.barcode;\n    this.selectedProductTitle = product.name_en;\n    this.selectedProductPrice = product.extra_price;\n    this.selectedProductImage = product.images[0];\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      // this.editForm.reset();\n      console.log(    `Closed with: ${result}` );\n    }, (reason) => {\n      // this.editForm.reset();\n      console.log(      `Dismissed ${this.getDismissReason(reason)}` );\n    });\n  }\n\n  openEdit(content, id) {\n    let newTable = this.transactions.filter(item => item._id == id);\n\n    this.editForm.controls['order_id'].setValue(newTable[0].order_id);\n    // this.editForm.controls['customer'].setValue(newTable[0].customer_id.name);\n    // this.editForm.controls['discount'].setValue(newTable[0].coupon_id.code);\n    // this.editForm.controls['total'].setValue(newTable[0].totalPrice);\n    this.editForm.controls['status'].setValue(newTable[0].status);\n\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n      // this.editForm.reset();\n      console.log(    `Closed with: ${result}` );\n    }, (reason) => {\n      // this.editForm.reset();\n      console.log(      `Dismissed ${this.getDismissReason(reason)}` );\n    });\n\n    \n  }\n\n  onEdit(modal) {\n    this.submittedEdit = true;\n\n    if (this.editForm.invalid) {\n      return;\n    } else {\n      let post_data = this.editForm.getRawValue();\n\n      this.customerService.updateOrder(post_data).subscribe(data => {\n        this.transactions = this.transactions.map(item => {\n          if (item.order_id == post_data.order_id) {\n            item.status = post_data.status;\n          }\n\n          return item;\n        });\n      })\n      \n      modal.close();\n    }\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  deleteGroupItem(id) {\n    this.customerService.delOrders(id).subscribe(data => {\n        this.transactions = this.transactions.filter(item => item._id != id);\n    })\n  }\n\n  changeOrderStatus(order_id, status) {\n    console.log(order_id,status);\n    this.customerService.updateOrder({ order_id: order_id, status }).subscribe(data => {\n      this.transactions = this.transactions.map(item => {\n        if (item.order_id == order_id) {\n          item.status = status;\n        }\n        return item;\n      });\n    })\n    \n  }\n}\n","<div class=\"container-fluid\">\n  <app-page-title title=\"Orders\" [breadcrumbItems]=\"breadCrumbItems\"></app-page-title>\n\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          \n          <!-- Table -->\n          <div class=\"table-responsive mb-0\">\n            <table class=\"table table-centered table-nowrap\">\n              <thead class=\"thead-light\">\n                <tr>\n                  <th style=\"width: 20px;\">\n                    <div class=\"custom-control custom-checkbox\">\n                      <input id=\"customCheck\" type=\"checkbox\" class=\"custom-control-input\" />\n                      <label class=\"custom-control-label\" for=\"customCheck\">&nbsp;</label>\n                    </div>\n                  </th>\n                  <th>Order ID</th>\n                  <th>Product</th>\n                  <th>Customer</th>\n                  <th>Discount code</th>\n                  <th>Total</th>\n                  <th>Date</th>\n                  <th>Status</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let data of transactions\">\n                  <td>\n                    <div class=\"custom-control custom-checkbox\">\n                      <input id=\"customCheck{{data.index}}\" type=\"checkbox\" class=\"custom-control-input\" />\n                      <label class=\"custom-control-label\" for=\"customCheck{{data.index}}\">&nbsp;</label>\n                    </div>\n                  </td>\n                  <td>\n                    <a href=\"javascript: void(0);\" class=\"text-body font-weight-bold\">{{data.order_id}}</a>\n                  </td>\n                  <td>\n                    <div *ngFor=\"let product of data.products\">\n                      <a href=\"javascript: void(0);\" class=\"text-body font-weight-bold\" (click)=\"openDetail(detailContent, product)\">{{product.name_en}} </a>\n                    </div>\n                  </td>\n                  <td>{{data.customer_id.name}}</td>\n                  <td>\n                    {{data.coupon_id?.code}}\n                  </td>\n                  <td>{{data.price}}</td>\n                  <td>{{data.createdAt | date:'dd/LL/YYYY' }}</td>\n                  <td>\n                    <button style=\"border: none;\" [animation]=\"true\" [ngbPopover]=\"popOver\" [popoverTitle]=\"popTitle\" class=\"badge badge-pill badge-soft-success font-size-12\" [ngClass]=\" { 'badge-soft-danger': data.status === 'REJECTED' || data.status === 'CANCELED', 'badge-soft-warning':data.status === 'SHIPPED' || data.status === 'DELIVERED', 'badge-soft-info': data.status === 'WAITING' }\">{{data.status}}</button>\n                    <ng-template #popOver>\n                      <ul class=\"menu_list\">\n                        <li (click)=\"changeOrderStatus(data.order_id,'WAITING')\">WAITING</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'SHIPPED')\">SHIPPED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'PREPARED')\">PREPARED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'HAND_OVERED')\">HAND_OVERED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'DELIVERED')\">DELIVERED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'REJECTED')\">REJECTED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'CANCELED')\">CANCELED</li>\n                        <li (click)=\"changeOrderStatus(data.order_id,'ACCEPTED')\">ACCEPTED</li>\n                      </ul>\n                    </ng-template>\n                    <!-- <ng-select *ngIf=\"change_badge\" [items]=\"order_status\" style=\"width: 150px;\" [appendTo]=\"'body'\" [(ngModel)]=\"selectedStatus\"></ng-select> -->\n                  </td>\n                  <td>\n                    <!-- Button trigger modal -->\n                    <div ngbDropdown container=\"body\" placement=\"bottom-left\">\n                      <i class=\"mdi mdi-dots-vertical dropdown-toggle\" ngbDropdownToggle data-toggle=\"dropdown\"\n                        aria-expanded=\"true\"></i>\n                      <div class=\"dropdown-menu dropdown-menu-right\" ngbDropdownMenu>\n                        <a class=\"dropdown-item\" (click)=\"openEdit(editContent, data._id)\"><i class=\"mdi mdi-account-edit\"></i>Status</a>\n                        <a class=\"dropdown-item\" (click)=\"deleteGroupItem(data._id)\"><i class=\"mdi mdi-delete\"></i>Delete</a>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <!-- End table -->\n          \n        </div>\n      </div>\n    </div>\n  </div>\n\n  \n  <!-- end table -->\n  \n</div>\n\n<ng-template #popTitle><b>Change Status</b></ng-template>\n\n<ng-template #editContent role=\"document\" let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title mt-0\">Change Status</h5>\n    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"modal.dismiss('Cross click')\">×</button>\n  </div>\n  <div class=\"modal-body\">\n    <form class=\"form-horizontal\" id=\"editForm\" [formGroup]=\"editForm\" (ngSubmit)=\"onEdit(modal)\">\n\n      <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n      <!-- <div class=\"form-group\">\n        <label for=\"order_id\">Order ID</label>\n\n        <input type=\"text\" formControlName=\"order_id\" class=\"form-control\" id=\"order_id\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.order_id.errors }\" />\n        <div *ngIf=\"submittedEdit && fe.order_id.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.order_id.errors.required\">Order ID is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"customer\">Customer</label>\n\n        <input type=\"text\" formControlName=\"customer\" class=\"form-control\" id=\"customer\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.customer.errors }\" />\n        <div *ngIf=\"submittedEdit && fe.customer.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.customer.errors.required\">Customer is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"discount\">Discount code</label>\n\n        <input type=\"text\" formControlName=\"discount\" class=\"form-control\" id=\"discount\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.discount.errors }\" />\n        <div *ngIf=\"submittedEdit && fe.discount.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.discount.errors.required\">Discount code is required</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"total\">Total</label>\n\n        <input type=\"text\" formControlName=\"total\" class=\"form-control\" id=\"total\"\n          [ngClass]=\"{ 'is-invalid': submitted && fe.total.errors }\" />\n        <div *ngIf=\"submittedEdit && fe.total.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.total.errors.required\"> Total is required</div>\n        </div>\n      </div> -->\n      <div class=\"form-group\">\n        <!-- <label for=\"status\">Status</label> -->\n        <ng-select *ngIf=\"change_badge\" [items]=\"order_status\" formControlName=\"status\"></ng-select>\n        <div *ngIf=\"submittedEdit && fe.status.errors\" class=\"invalid-feedback\">\n          <div *ngIf=\"fe.status.errors.required\">Status is required</div>\n        </div>\n      </div>\n\n\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n    <input class=\"btn btn-primary\" type=\"submit\" form=\"editForm\" value=\"Save\"/>\n\n  </div>\n</ng-template>\n\n<ng-template #detailContent role=\"document\" let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title mt-0\">Order Details</h5>\n    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"modal.dismiss('Cross click')\">×</button>\n  </div>\n  <div class=\"modal-body\">\n\n    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n    <div class=\"d-flex mx-2\">\n      <div>\n        <img style=\"width: 200px; height: 200px;\" src=\"{{backend + '/getfile/?id='  + selectedProductImage}}\" />\n      </div>\n      <div class=\"ml-2\">\n        <div class=\"d-flex\">\n          <label id=\"product_name mr-2\">Title: </label>\n          <div for=\"product_name\" class=\"font-weight-bold\">&nbsp; {{selectedProductTitle}}</div>\n        </div>\n        <div class=\"d-flex mt-2\">\n          <label id=\"product_price mr-2\">Price: </label>\n          <div for=\"product_price\" class=\"font-weight-bold\">&nbsp; {{selectedProductPrice}}</div>\n        </div>\n        <div class=\"d-flex mt-2\">\n          <label id=\"qrcode mr-2\">Qrcode: </label>\n          <div for=\"qrcode\" class=\"font-weight-bold\">&nbsp; {{generateQrcode}}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center\">\n      <qrcode [qrdata]=\"generateQrcode\" [width]=\"200\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Close</button>\n    <!-- <button class=\"btn btn-primary\" (click)=\"generateBC()\">Generate a new code</button> -->\n\n  </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CustomersRoutingModule } from './customers-routing.module';\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { WidgetModule } from '../../shared/widget/widget.module';\n\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { NgbAlertModule, NgbNavModule, NgbDropdownModule, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { DROPZONE_CONFIG } from 'ngx-dropzone-wrapper';\nimport { DropzoneConfigInterface } from 'ngx-dropzone-wrapper';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CustomersComponent } from './customers.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n\nconst config: DropzoneConfigInterface = {\n  // Change this to your upload POST address:\n\n};\n\n\n@NgModule({\n  // tslint:disable-next-line: max-line-length\n  declarations: [CustomersComponent, OrdersComponent],\n  imports: [\n    CommonModule,\n    CustomersRoutingModule,\n    NgbNavModule,\n    FormsModule,\n    Ng2SearchPipeModule,\n    NgbAlertModule,\n    NgbDropdownModule,\n    DropzoneModule,\n    ReactiveFormsModule,\n    UIModule,\n    WidgetModule,\n    Ng5SliderModule,\n    NgSelectModule,\n    NgbPaginationModule,\n    QRCodeModule,\n    NgbModule\n  ],\n  providers: [\n    {\n      provide: DROPZONE_CONFIG,\n      useValue: config\n    }\n  ]\n})\nexport class CustomersModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomersComponent } from './customers.component';\nimport { OrdersComponent } from './orders/orders.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'list' },\n\n\n  {\n    path: 'list',\n    component: CustomersComponent,\n  },\n  {\n      path: 'orders',\n      component: OrdersComponent,\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CustomersRoutingModule { }\n"]}