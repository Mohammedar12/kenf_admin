{"version":3,"sources":["./src/app/core/services/user.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAEoB;AAEC;;;;AAOzD,MAAM,kBAAkB;IAE7B,YAAoB,IAAgB,EAAU,WAA0C;QAApE,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAA+B;QADhF,gBAAW,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5C,IAAI,CAAC,WAAW,GAAG,EAAE,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;YAEhF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,qEAAW,CAAC,OAAO,GAAG,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3F,CAAC;IACD,YAAY,CAAC,OAAO;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qEAAW,CAAC,OAAO,GAAG,iBAAiB,GAAG,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/F,CAAC;IACD,eAAe,CAAC,OAAO;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,OAAO,GAAG,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACxF,CAAC;IACD,OAAO,CAAC,OAAO;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,OAAO,GAAG,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1F,CAAC;IACD,MAAM;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,qEAAW,CAAC,OAAO,GAAG,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IACpF,CAAC;IACD,OAAO,CAAC,EAAE;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,OAAO,GAAG,cAAc,GAAC,EAAE,CAAC,CAAC;IAChE,CAAC;IACD,QAAQ,CAAC,IAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;;oFA9BU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBADL,MAAM;6FACnB,kBAAkB;cAD9B,wDAAU;eAAC,EAAE,UAAU,EAAE,MAAM,EAAE","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment';\n\nimport { User } from '../models/auth.models';\nimport { UserGroup } from '../models/user_group.models';\nimport { AuthfakeauthenticationService } from './authfake.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n  private httpOptions = {};\n  constructor(private http: HttpClient, private authService: AuthfakeauthenticationService) {\n    this.authService.currentUser.subscribe(user => {\n      this.httpOptions = { headers: new HttpHeaders({ \"x-auth-token\": user.token }) };\n\n      console.log(user)\n    });\n  }\n\n  getUserGroup() {\n    return this.http.get<UserGroup[]>(environment.backend + `/user/group`, this.httpOptions);\n  }\n  delUserGroup(sysInfo) {\n    return this.http.delete(environment.backend + `/user/group?id=` + sysInfo, this.httpOptions);\n  }\n  updateUserGroup(sysInfo): Observable<any> {\n    return this.http.post(environment.backend + `/user/group`, sysInfo, this.httpOptions);\n  }\n  adduser(adduser): Observable<any> {\n    return this.http.post(environment.backend + `/user/addUser`, adduser, this.httpOptions);\n  }\n  getAll() {\n    return this.http.get<User[]>(environment.backend + `/user/all`, this.httpOptions);\n  }\n  getFile(id): Observable<any> {\n    return this.http.get(environment.backend + `/getfile?id=`+id);\n  }\n  register(user: User) {\n    return this.http.post(`/users/register`, user);\n  }\n}\n"],"sourceRoot":"webpack:///"}