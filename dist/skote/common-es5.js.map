{"version":3,"sources":["webpack:///src/app/core/services/user.service.ts"],"names":["UserProfileService","http","authService","httpOptions","currentUser","subscribe","user","headers","token","console","log","get","backend","sysInfo","post","adduser","id","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaA,kB;AAEX,oCAAoBC,IAApB,EAA8CC,WAA9C,EAA0F;AAAA;;AAAA;;AAAtE,eAAAD,IAAA,GAAAA,IAAA;AAA0B,eAAAC,WAAA,GAAAA,WAAA;AADtC,eAAAC,WAAA,GAAc,EAAd;AAEN,eAAKD,WAAL,CAAiBE,WAAjB,CAA6BC,SAA7B,CAAuC,UAAAC,IAAI,EAAI;AAC7C,iBAAI,CAACH,WAAL,GAAmB;AAAEI,qBAAO,EAAE,IAAI,gEAAJ,CAAgB;AAAE,gCAAgBD,IAAI,CAACE;AAAvB,eAAhB;AAAX,aAAnB;AAEAC,mBAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,WAJD;AAKD;;;;iBAED,wBAAe;AACb,mBAAO,KAAKL,IAAL,CAAUU,GAAV,CAA2B,sEAAYC,OAAZ,gBAA3B,EAAgE,KAAKT,WAArE,CAAP;AACD;;;iBACD,sBAAaU,OAAb,EAAsB;AACpB,mBAAO,KAAKZ,IAAL,WAAiB,sEAAYW,OAAZ,uBAA0CC,OAA3D,EAAoE,KAAKV,WAAzE,CAAP;AACD;;;iBACD,yBAAgBU,OAAhB,EAAuB;AACrB,mBAAO,KAAKZ,IAAL,CAAUa,IAAV,CAAe,sEAAYF,OAAZ,gBAAf,EAAoDC,OAApD,EAA6D,KAAKV,WAAlE,CAAP;AACD;;;iBACD,iBAAQY,QAAR,EAAe;AACb,mBAAO,KAAKd,IAAL,CAAUa,IAAV,CAAe,sEAAYF,OAAZ,kBAAf,EAAsDG,QAAtD,EAA+D,KAAKZ,WAApE,CAAP;AACD;;;iBACD,kBAAS;AACP,mBAAO,KAAKF,IAAL,CAAUU,GAAV,CAAsB,sEAAYC,OAAZ,cAAtB,EAAyD,KAAKT,WAA9D,CAAP;AACD;;;iBACD,iBAAQa,EAAR,EAAU;AACR,mBAAO,KAAKf,IAAL,CAAUU,GAAV,CAAc,sEAAYC,OAAZ,oBAAqCI,EAAnD,CAAP;AACD;;;iBACD,kBAASV,IAAT,EAAqB;AACnB,mBAAO,KAAKL,IAAL,CAAUa,IAAV,oBAAkCR,IAAlC,CAAP;AACD;;;;;;;yBA9BUN,kB,EAAkB,uH,EAAA,uI;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBADL;;;;;wEACbA,kB,EAAkB;gBAD9B,wDAC8B;iBADnB;AAAEiB,sBAAU,EAAE;AAAd,W;AACmB,U","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { of as observableOf, Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment';\n\nimport { User } from '../models/auth.models';\nimport { UserGroup } from '../models/user_group.models';\nimport { AuthfakeauthenticationService } from './authfake.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n  private httpOptions = {};\n  constructor(private http: HttpClient, private authService: AuthfakeauthenticationService) {\n    this.authService.currentUser.subscribe(user => {\n      this.httpOptions = { headers: new HttpHeaders({ \"x-auth-token\": user.token }) };\n\n      console.log(user)\n    });\n  }\n\n  getUserGroup() {\n    return this.http.get<UserGroup[]>(environment.backend + `/user/group`, this.httpOptions);\n  }\n  delUserGroup(sysInfo) {\n    return this.http.delete(environment.backend + `/user/group?id=` + sysInfo, this.httpOptions);\n  }\n  updateUserGroup(sysInfo): Observable<any> {\n    return this.http.post(environment.backend + `/user/group`, sysInfo, this.httpOptions);\n  }\n  adduser(adduser): Observable<any> {\n    return this.http.post(environment.backend + `/user/addUser`, adduser, this.httpOptions);\n  }\n  getAll() {\n    return this.http.get<User[]>(environment.backend + `/user/all`, this.httpOptions);\n  }\n  getFile(id): Observable<any> {\n    return this.http.get(environment.backend + `/getfile?id=`+id);\n  }\n  register(user: User) {\n    return this.http.post(`/users/register`, user);\n  }\n}\n"]}